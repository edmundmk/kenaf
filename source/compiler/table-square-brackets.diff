diff --git a/source/compiler/grammar.lemon b/source/compiler/grammar.lemon
index 94265eb..aaf5f24 100644
--- a/source/compiler/grammar.lemon
+++ b/source/compiler/grammar.lemon
@@ -441,9 +441,9 @@ expr_elif_list_opt(x) ::= expr_elif_list_opt ELIF(kw) expr(u) THEN expr .
 expr(x) ::= expr_if(u) .                            { x = u; }
 expr(x) ::= constructor(u) .                        { x = { EXPR_FULL, u }; }
 expr(x) ::= LSQ(op) avalue_list_opt(u) RSQ .        { x = { EXPR_FULL, p->node( AST_EXPR_ARRAY, op.sloc, u ) }; }
-expr(x) ::= LBR(op) keyval_list_opt(u) RBR .        { x = { EXPR_FULL, p->node( AST_EXPR_TABLE, op.sloc, u ) }; }
+expr(x) ::= LSQ(op) keyval_list_opt(u) RSQ .        { x = { EXPR_FULL, p->node( AST_EXPR_TABLE, op.sloc, u ) }; }
 
-keyval_list_opt(x) ::= .                            { x = AST_INVALID_INDEX; }
+keyval_list_opt(x) ::= COLON .                      { x = AST_INVALID_INDEX; }
 keyval_list_opt(x) ::= keyval_list(u) .             { x = u; }
 keyval_list_opt(x) ::= keyval_list(u) COMMA .       { x = u; }
 
diff --git a/source/compiler/lexer.cpp b/source/compiler/lexer.cpp
index 5033ac2..ab138f5 100644
--- a/source/compiler/lexer.cpp
+++ b/source/compiler/lexer.cpp
@@ -308,18 +308,10 @@ token lexer::lex()
             next();
             return assign_token( TOKEN_CARET, TOKEN_BITXOR_ASSIGN, sloc );
 
-        case '{':
-            next();
-            return source_token( TOKEN_LBR, sloc );
-
         case '|':
             next();
             return assign_token( TOKEN_VBAR, TOKEN_BITOR_ASSIGN, sloc );
 
-        case '}':
-            next();
-            return source_token( TOKEN_RBR, sloc );
-
         case '~':
             if ( peek( 1 ) == '>' && peek( 2 ) == '>' )
             {
