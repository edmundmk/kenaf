--
--  fannkuch-redux.kf
--  Based on code from the Computer Language Benchmarks Game
--  https://salsa.debian.org/benchmarksgame-team/benchmarksgame/
--

def fannkuch( n )

    var p, q, s = [], [], []
    p.resize( n )
    q.resize( n )
    s.resize( n )

    var sign, maxflips, sum = 1, 0, 0

    for i = 0 : n do
        p[ i ] = q[ i ] = s[ i ] = i
    end

    while true do
        var q0 = p[ 0 ]

        if q0 != 0 then
            for i = 1 : n do
                q[ i ] = p[ i ]
            end

            var flips = 1
            while true do
                var qq = q[ q0 ]
                if qq == 0 then
                    sum += sign * flips
                    if flips > maxflips then
                        maxflips = flips
                    end
                    break
                end

                q[ q0 ] = q0

                var i = 1
                var j = q0 - 1
                while i < j do
                    q[ i ], q[ j ] = q[ j ], q[ i ]
                    i += 1
                    j -= 1
                end

                q0 = qq
                flips += 1
            end
        end

        if sign == 1 then
            p[ 1 ], p[ 0 ] = p[ 0 ], p[ 1 ]
            sign = -1
        else
            p[ 1 ], p[ 2 ] = p[ 2 ], p[ 1 ]
            sign = 1

            for i = 2 : n do
                var sx = s[ i ]
                if sx != 0 then
                    s[ i ] = sx - 1
                    break
                end

                if i == n - 1 then
                    print( "%d\n", sum )
                    return maxflips
                end

                s[ i ] = i
                var t = p[ 0 ]
                for j = 0 : i do
                    p[ j ] = p[ j + 1 ]
                end
                p[ i + 1 ] = t

            end

        end

    end

end

var _, n = args ...
n = if n then number( n ) else 7 end
print( "Pfannkuchen(%d) = %d\n", n, fannkuch( n ) )

